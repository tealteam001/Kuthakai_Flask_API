"""empty message

Revision ID: 363ac0f39149
Revises: 752821d73f5e
Create Date: 2024-01-25 00:24:24.974755

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '363ac0f39149'
down_revision = '752821d73f5e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food_portion_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type'),
    schema='food'
    )
    op.create_table('food_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type'),
    schema='order'
    )
    op.create_table('map_food_food_portion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('status'),
    schema='order'
    )
    op.create_table('order_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type'),
    schema='order'
    )
    op.create_table('payment_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type'),
    schema='order'
    )
    op.create_table('privilage_entity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='user'
    )
    op.create_table('user_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type'),
    schema='user'
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('nic', sa.String(length=128), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('user_type_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.ForeignKeyConstraint(['user_type_id'], ['user.user_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('nic'),
    sa.UniqueConstraint('user_name'),
    schema='user'
    )
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('user_name', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('phone_number', sa.Integer(), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_name'),
    schema='customer'
    )
    op.create_table('food',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='food'
    )
    op.create_table('food_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('food_category', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('food_category'),
    schema='food'
    )
    op.create_table('create_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('privilage_entity_id', sa.Integer(), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.ForeignKeyConstraint(['privilage_entity_id'], ['user.privilage_entity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='user'
    )
    op.create_table('delete_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('privilage_entity_id', sa.Integer(), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.ForeignKeyConstraint(['privilage_entity_id'], ['user.privilage_entity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='user'
    )
    op.create_table('edit_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('privilage_entity_id', sa.Integer(), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.ForeignKeyConstraint(['privilage_entity_id'], ['user.privilage_entity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='user'
    )
    op.create_table('view_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('privilage_entity_id', sa.Integer(), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.ForeignKeyConstraint(['privilage_entity_id'], ['user.privilage_entity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='user'
    )
    op.create_table('map_food_food_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('food_category_id', sa.Integer(), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.ForeignKeyConstraint(['food_category_id'], ['food.food_category.id'], ),
    sa.ForeignKeyConstraint(['food_id'], ['food.food.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='food'
    )
    op.create_table('map_food_food_portion_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('food_portion_type_id', sa.Integer(), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.ForeignKeyConstraint(['food_id'], ['food.food.id'], ),
    sa.ForeignKeyConstraint(['food_portion_type_id'], ['food.food_portion_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='food'
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('requested_time', sa.DateTime(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('create_user_id', sa.Integer(), nullable=False),
    sa.Column('order_type_id', sa.Integer(), nullable=False),
    sa.Column('discount_type_id', sa.Integer(), nullable=False),
    sa.Column('order_status_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['create_user_id'], ['user.user.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer.id'], ),
    sa.ForeignKeyConstraint(['discount_type_id'], ['order.food_category.id'], ),
    sa.ForeignKeyConstraint(['order_status_id'], ['order.map_food_food_portion.id'], ),
    sa.ForeignKeyConstraint(['order_type_id'], ['order.order_type.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['user.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='order'
    )
    op.create_table('map_order_food',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['food_id'], ['food.food.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.order.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='order'
    )
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=2),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(precision=2),
               type_=sa.REAL(),
               existing_nullable=False)

    op.drop_table('map_order_food', schema='order')
    op.drop_table('order', schema='order')
    op.drop_table('map_food_food_portion_type', schema='food')
    op.drop_table('map_food_food_category', schema='food')
    op.drop_table('view_access', schema='user')
    op.drop_table('edit_access', schema='user')
    op.drop_table('delete_access', schema='user')
    op.drop_table('create_access', schema='user')
    op.drop_table('food_category', schema='food')
    op.drop_table('food', schema='food')
    op.drop_table('customer', schema='customer')
    op.drop_table('user', schema='user')
    op.drop_table('user_type', schema='user')
    op.drop_table('privilage_entity', schema='user')
    op.drop_table('payment_type', schema='order')
    op.drop_table('order_type', schema='order')
    op.drop_table('map_food_food_portion', schema='order')
    op.drop_table('food_category', schema='order')
    op.drop_table('food_portion_type', schema='food')
    # ### end Alembic commands ###
